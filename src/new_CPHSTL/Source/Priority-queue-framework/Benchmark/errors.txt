pair-queue #comp per push
../Code/priority-queue-framework.i++: In member function ‘E* cphstl::priority_queue_framework<V, C, A, E, P, H, M>::extract() [with V = long long int, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, H = cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, M = cphstl::blank_mark_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >]’:
/home/jos/diku/data/src/new_CPHSTL//Source/Meldable-priority-queue/Code/stl-meldable-priority-queue.i++:225:   instantiated from ‘void cphstl::meldable_priority_queue<V, C, A, F, Q, R, I, J>::clear() [with V = long long int, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, R = cphstl::priority_queue_framework<long long int, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, cphstl::blank_mark_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, I = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, false>, J = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, true>]’
/home/jos/diku/data/src/new_CPHSTL//Source/Meldable-priority-queue/Code/stl-meldable-priority-queue.i++:106:   instantiated from ‘cphstl::meldable_priority_queue<V, C, A, F, Q, R, I, J>::~meldable_priority_queue() [with V = long long int, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, R = cphstl::priority_queue_framework<long long int, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, cphstl::blank_mark_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, I = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, false>, J = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, true>]’
push-comp.c++:15:   instantiated from here
../Code/priority-queue-framework.i++:138: error: ‘class cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >’ has no member named ‘split’
/home/jos/diku/data/src/new_CPHSTL//Source/Meldable-priority-queue/Code/stl-meldable-priority-queue.i++:225:   instantiated from ‘void cphstl::meldable_priority_queue<V, C, A, F, Q, R, I, J>::clear() [with V = long long int, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, R = cphstl::priority_queue_framework<long long int, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, cphstl::blank_mark_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, I = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, false>, J = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, true>]’
/home/jos/diku/data/src/new_CPHSTL//Source/Meldable-priority-queue/Code/stl-meldable-priority-queue.i++:106:   instantiated from ‘cphstl::meldable_priority_queue<V, C, A, F, Q, R, I, J>::~meldable_priority_queue() [with V = long long int, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, R = cphstl::priority_queue_framework<long long int, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, cphstl::blank_mark_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, I = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, false>, J = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, true>]’
push-comp.c++:15:   instantiated from here
../Code/priority-queue-framework.i++:154: error: ‘class cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >’ has no member named ‘swap_roots’
../Code/double-stack-heap-store.h++: In member function ‘void cphstl::double_stack_heap_store<C, A, E, P>::inject(E*, size_t) [with C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >]’:
../Code/priority-queue-framework.i++:93:   instantiated from ‘void cphstl::priority_queue_framework<V, C, A, E, P, H, M>::insert(E*) [with V = long long int, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, H = cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, M = cphstl::blank_mark_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >]’
/home/jos/diku/data/src/new_CPHSTL//Source/Meldable-priority-queue/Code/stl-meldable-priority-queue.i++:191:   instantiated from ‘I cphstl::meldable_priority_queue<V, C, A, F, Q, R, I, J>::push(const V&) [with V = long long int, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, R = cphstl::priority_queue_framework<long long int, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, cphstl::blank_mark_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, I = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, false>, J = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, true>]’
push-comp.c++:29:   instantiated from here
../Code/double-stack-heap-store.h++:88: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘successor’
../Code/double-stack-heap-store.h++:89: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘root’
../Code/double-stack-heap-store.h++:90: error: ‘class cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >’ has no member named ‘join’
../Code/double-stack-heap-store.h++:90: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘root’
../Code/double-stack-heap-store.h++:91: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘successor_pair’
../Code/double-stack-heap-store.h++:92: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘update’
../Code/double-stack-heap-store.h++:92: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘height’
../Code/double-stack-heap-store.h++:92: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘successor’
../Code/double-stack-heap-store.h++:94: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘update’
../Code/double-stack-heap-store.h++:96: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘successor’
../Code/double-stack-heap-store.h++:97: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘height’
../Code/double-stack-heap-store.h++:97: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘height’
../Code/double-stack-heap-store.h++:98: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘successor_pair’
../Code/double-stack-heap-store.h++:104: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘height’
../Code/double-stack-heap-store.h++:104: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘height’
../Code/double-stack-heap-store.h++:105: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘successor_pair’
../Code/double-stack-heap-store.h++:111: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘height’
../Code/double-stack-heap-store.h++:112: error: ‘class cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >’ has no member named ‘join’
../Code/double-stack-heap-store.h++:112: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘root’
../Code/double-stack-heap-store.h++:113: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘update’
../Code/double-stack-heap-store.h++:113: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘height’
../Code/double-stack-heap-store.h++:113: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘successor’
../Code/double-stack-heap-store.h++:114: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘successor’
../Code/double-stack-heap-store.h++:115: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘height’
../Code/double-stack-heap-store.h++:115: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘height’
../Code/priority-queue-framework.i++:93:   instantiated from ‘void cphstl::priority_queue_framework<V, C, A, E, P, H, M>::insert(E*) [with V = long long int, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, H = cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, M = cphstl::blank_mark_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >]’
/home/jos/diku/data/src/new_CPHSTL//Source/Meldable-priority-queue/Code/stl-meldable-priority-queue.i++:191:   instantiated from ‘I cphstl::meldable_priority_queue<V, C, A, F, Q, R, I, J>::push(const V&) [with V = long long int, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, R = cphstl::priority_queue_framework<long long int, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, cphstl::blank_mark_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, I = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, false>, J = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, true>]’
push-comp.c++:29:   instantiated from here
../Code/double-stack-heap-store.h++:121: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘successor’
../Code/double-stack-heap-store.h++: In member function ‘std::pair<E*, long unsigned int> cphstl::double_stack_heap_store<C, A, E, P>::eject() [with C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >]’:
../Code/priority-queue-framework.i++:134:   instantiated from ‘E* cphstl::priority_queue_framework<V, C, A, E, P, H, M>::extract() [with V = long long int, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, H = cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, M = cphstl::blank_mark_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >]’
/home/jos/diku/data/src/new_CPHSTL//Source/Meldable-priority-queue/Code/stl-meldable-priority-queue.i++:225:   instantiated from ‘void cphstl::meldable_priority_queue<V, C, A, F, Q, R, I, J>::clear() [with V = long long int, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, R = cphstl::priority_queue_framework<long long int, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, cphstl::blank_mark_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, I = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, false>, J = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, true>]’
/home/jos/diku/data/src/new_CPHSTL//Source/Meldable-priority-queue/Code/stl-meldable-priority-queue.i++:106:   instantiated from ‘cphstl::meldable_priority_queue<V, C, A, F, Q, R, I, J>::~meldable_priority_queue() [with V = long long int, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, R = cphstl::priority_queue_framework<long long int, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, cphstl::blank_mark_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, I = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, false>, J = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, true>]’
push-comp.c++:15:   instantiated from here
../Code/double-stack-heap-store.h++:131: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘root’
../Code/double-stack-heap-store.h++:132: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘successor’
../Code/double-stack-heap-store.h++:134: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘successor_pair’
../Code/double-stack-heap-store.h++:135: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘successor_pair’
../Code/double-stack-heap-store.h++:137: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘height’
../Code/priority-queue-framework.i++:134:   instantiated from ‘E* cphstl::priority_queue_framework<V, C, A, E, P, H, M>::extract() [with V = long long int, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, H = cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, M = cphstl::blank_mark_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >]’
/home/jos/diku/data/src/new_CPHSTL//Source/Meldable-priority-queue/Code/stl-meldable-priority-queue.i++:225:   instantiated from ‘void cphstl::meldable_priority_queue<V, C, A, F, Q, R, I, J>::clear() [with V = long long int, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, R = cphstl::priority_queue_framework<long long int, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, cphstl::blank_mark_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, I = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, false>, J = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, true>]’
/home/jos/diku/data/src/new_CPHSTL//Source/Meldable-priority-queue/Code/stl-meldable-priority-queue.i++:106:   instantiated from ‘cphstl::meldable_priority_queue<V, C, A, F, Q, R, I, J>::~meldable_priority_queue() [with V = long long int, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, R = cphstl::priority_queue_framework<long long int, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, cphstl::blank_mark_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, I = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, false>, J = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, true>]’
push-comp.c++:15:   instantiated from here
../Code/double-stack-heap-store.h++:139: error: lvalue required as left operand of assignment
../Code/blank-mark-store.h++: In member function ‘void cphstl::blank_mark_store<C, A, E>::reduce(H&) [with H = cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >]’:
../Code/priority-queue-framework.i++:142:   instantiated from ‘E* cphstl::priority_queue_framework<V, C, A, E, P, H, M>::extract() [with V = long long int, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, H = cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, M = cphstl::blank_mark_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >]’
/home/jos/diku/data/src/new_CPHSTL//Source/Meldable-priority-queue/Code/stl-meldable-priority-queue.i++:225:   instantiated from ‘void cphstl::meldable_priority_queue<V, C, A, F, Q, R, I, J>::clear() [with V = long long int, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, R = cphstl::priority_queue_framework<long long int, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, cphstl::blank_mark_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, I = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, false>, J = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, true>]’
/home/jos/diku/data/src/new_CPHSTL//Source/Meldable-priority-queue/Code/stl-meldable-priority-queue.i++:106:   instantiated from ‘cphstl::meldable_priority_queue<V, C, A, F, Q, R, I, J>::~meldable_priority_queue() [with V = long long int, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, R = cphstl::priority_queue_framework<long long int, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, cphstl::blank_mark_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, I = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, false>, J = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, true>]’
push-comp.c++:15:   instantiated from here
../Code/blank-mark-store.h++:73: error: ‘class cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >’ has no member named ‘distinguished_ancestor’
../Code/blank-mark-store.h++:83: error: ‘class cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >’ has no member named ‘promote’
../Code/blank-mark-store.h++:87: error: ‘class cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >’ has no member named ‘distinguished_ancestor’
../Code/priority-queue-framework.i++:142:   instantiated from ‘E* cphstl::priority_queue_framework<V, C, A, E, P, H, M>::extract() [with V = long long int, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, H = cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, M = cphstl::blank_mark_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >]’
/home/jos/diku/data/src/new_CPHSTL//Source/Meldable-priority-queue/Code/stl-meldable-priority-queue.i++:225:   instantiated from ‘void cphstl::meldable_priority_queue<V, C, A, F, Q, R, I, J>::clear() [with V = long long int, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, R = cphstl::priority_queue_framework<long long int, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, cphstl::blank_mark_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, I = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, false>, J = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, true>]’
/home/jos/diku/data/src/new_CPHSTL//Source/Meldable-priority-queue/Code/stl-meldable-priority-queue.i++:106:   instantiated from ‘cphstl::meldable_priority_queue<V, C, A, F, Q, R, I, J>::~meldable_priority_queue() [with V = long long int, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, R = cphstl::priority_queue_framework<long long int, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, cphstl::blank_mark_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, I = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, false>, J = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, true>]’
push-comp.c++:15:   instantiated from here
../Code/blank-mark-store.h++:96: error: ‘class cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >’ has no member named ‘update’
../Code/double-stack-heap-store.h++: In member function ‘P* cphstl::double_stack_heap_store<C, A, E, P>::create(E*, size_t, P*, P*) [with C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >]’:
../Code/double-stack-heap-store.h++:120:   instantiated from ‘void cphstl::double_stack_heap_store<C, A, E, P>::inject(E*, size_t) [with C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >]’
../Code/priority-queue-framework.i++:93:   instantiated from ‘void cphstl::priority_queue_framework<V, C, A, E, P, H, M>::insert(E*) [with V = long long int, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, H = cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, M = cphstl::blank_mark_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >]’
/home/jos/diku/data/src/new_CPHSTL//Source/Meldable-priority-queue/Code/stl-meldable-priority-queue.i++:191:   instantiated from ‘I cphstl::meldable_priority_queue<V, C, A, F, Q, R, I, J>::push(const V&) [with V = long long int, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, R = cphstl::priority_queue_framework<long long int, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, cphstl::blank_mark_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, I = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, false>, J = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, true>]’
push-comp.c++:29:   instantiated from here
../Code/double-stack-heap-store.h++:249: error: no matching function for call to ‘cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >::pairing_heap_framework(cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >*&, size_t&, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >*&, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >*&)’
/home/jos/diku/data/src/v1/pairing-heap-framework.h++:85: note: candidates are: cphstl::pairing_heap_framework<V, P, C, A, E>::pairing_heap_framework(const cphstl::pairing_heap_framework<V, P, C, A, E>&) [with V = long long int, P = cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >]
/home/jos/diku/data/src/v1/pairing-heap-framework.i++:26: note:                 cphstl::pairing_heap_framework<V, P, C, A, E>::pairing_heap_framework() [with V = long long int, P = cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >]
/home/jos/diku/data/src/v1/pairing-heap-framework.i++:18: note:                 cphstl::pairing_heap_framework<V, P, C, A, E>::pairing_heap_framework(const C&, const A&) [with V = long long int, P = cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >]
../Code/double-stack-heap-store.h++:250: error: lvalue required as left operand of assignment
/home/jos/diku/data/src/v1/pairing-heap-node.c++: In member function ‘cphstl::pairing_heap_node<V, A, std::less<V> >* cphstl::pairing_heap_node<V, A, C>::owner() const [with V = long long int, A = std::allocator<long long int>, C = std::less<long long int>]’:
../Code/double-stack-heap-store.h++:139:   instantiated from ‘std::pair<E*, long unsigned int> cphstl::double_stack_heap_store<C, A, E, P>::eject() [with C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >]’
../Code/priority-queue-framework.i++:134:   instantiated from ‘E* cphstl::priority_queue_framework<V, C, A, E, P, H, M>::extract() [with V = long long int, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, H = cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, M = cphstl::blank_mark_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >]’
/home/jos/diku/data/src/new_CPHSTL//Source/Meldable-priority-queue/Code/stl-meldable-priority-queue.i++:225:   instantiated from ‘void cphstl::meldable_priority_queue<V, C, A, F, Q, R, I, J>::clear() [with V = long long int, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, R = cphstl::priority_queue_framework<long long int, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, cphstl::blank_mark_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, I = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, false>, J = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, true>]’
/home/jos/diku/data/src/new_CPHSTL//Source/Meldable-priority-queue/Code/stl-meldable-priority-queue.i++:106:   instantiated from ‘cphstl::meldable_priority_queue<V, C, A, F, Q, R, I, J>::~meldable_priority_queue() [with V = long long int, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, R = cphstl::priority_queue_framework<long long int, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, cphstl::blank_mark_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, I = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, false>, J = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, true>]’
push-comp.c++:15:   instantiated from here
/home/jos/diku/data/src/v1/pairing-heap-node.c++:133: warning: no return statement in function returning non-void
/home/jos/diku/data/src/v1/pairing-heap-node.c++: In member function ‘bool cphstl::pairing_heap_node<V, A, C>::is_root() const [with V = long long int, A = std::allocator<long long int>, C = std::less<long long int>]’:
../Code/blank-mark-store.h++:93:   instantiated from ‘void cphstl::blank_mark_store<C, A, E>::reduce(H&) [with H = cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >]’
../Code/priority-queue-framework.i++:142:   instantiated from ‘E* cphstl::priority_queue_framework<V, C, A, E, P, H, M>::extract() [with V = long long int, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, H = cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, M = cphstl::blank_mark_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >]’
/home/jos/diku/data/src/new_CPHSTL//Source/Meldable-priority-queue/Code/stl-meldable-priority-queue.i++:225:   instantiated from ‘void cphstl::meldable_priority_queue<V, C, A, F, Q, R, I, J>::clear() [with V = long long int, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, R = cphstl::priority_queue_framework<long long int, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, cphstl::blank_mark_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, I = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, false>, J = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, true>]’
/home/jos/diku/data/src/new_CPHSTL//Source/Meldable-priority-queue/Code/stl-meldable-priority-queue.i++:106:   instantiated from ‘cphstl::meldable_priority_queue<V, C, A, F, Q, R, I, J>::~meldable_priority_queue() [with V = long long int, C = counting_comparator<long long int>, A = std::allocator<long long int>, E = cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, P = cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, R = cphstl::priority_queue_framework<long long int, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, cphstl::double_stack_heap_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, cphstl::blank_mark_store<counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > > >, I = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, false>, J = cphstl::priority_queue_iterator<cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> >, cphstl::pairing_heap_framework<long long int, cphstl::pairing_heap_policy_strict<long long int, std::less<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, counting_comparator<long long int>, std::allocator<long long int>, cphstl::pairing_heap_node<long long int, std::allocator<long long int>, std::less<long long int> > >, true>]’
push-comp.c++:15:   instantiated from here
/home/jos/diku/data/src/v1/pairing-heap-node.c++:83: warning: suggest parentheses around comparison in operand of ==
/bin/sh: ./a.out: not found
