#include <memory> // std::allocator
#include "pennant-node.h++"
#include "stl-meldable-priority-queue.h++"

long long comps = 0;

template <typename T>
class counting_comparator {
public:

  bool operator()(T const& a, T const& b) const {
    ++comps;
    return a < b;
  }
};

typedef long long V;
typedef counting_comparator<V> C;
typedef std::allocator<V> A;
typedef cphstl::pennant_node<V, A> N;
typedef cphstl::meldable_priority_queue<V, C, A, N> Q;
